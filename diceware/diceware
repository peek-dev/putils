#!/usr/bin/env python3

import argparse
import sys
import random

parser = argparse.ArgumentParser(prog='diceware.py', description='Small \"diceware\" program to pseudorandomly generate a passphrase from a dictionary file.')

parser.add_argument('-i', '--input', '-l', '--list', '--input-list', help='Input wordlist/dictionary to generate passphrase from', required=True, type=str, metavar='FILE')
parser.add_argument('-o', '--output', help='File to write passphrase to (default: stdout)', required=False, type=str, metavar='FILE')
parser.add_argument('-n', '--num-words', help='Number of words to generate in passphrase', required=False, type=int, metavar='NUM', default=4)
parser.add_argument('--min-length', help='Minimum word length for each word in passphrase', required=False, type=int, default=1, metavar='LENGTH')
parser.add_argument('--no-spaces', help='Print the passphrase without spaces', action='store_true', required=False)

if __name__ == '__main__':
    args = parser.parse_args()
    
    outfile = sys.stdout

    if (args.output):
        try: 
            outfile = open(args.output, 'a')
        except:
            print("WARNING: could not open output file! Reverting to stdout.", file=sys.stderr)

    try:
        with open(args.input, 'r') as input_wordlist:
            wordlist = input_wordlist.readlines()
            list_len = len(wordlist)

            found_words = 0
            iterations = 0

            while found_words < args.num_words:
                iterations += 1

                if (iterations >= list_len):
                    print("WARNING: Passphrase generation may have exhausted the list (iterations = list length). Check your --min-length argument (if passed) and your wordlist.", file=sys.stderr)
                    break

                next_word = wordlist[random.randrange(0, list_len, 1)].strip()

                if len(next_word) >= args.min_length:
                    found_words += 1
                    print(next_word, file=outfile, end='')
                    
                    if not (args.no_spaces):
                        print('', end=' ')

                if found_words == args.num_words:
                    print()

    except FileNotFoundError:
        print(f"ERROR: input wordlist file \"{args.input}\" could not be found! Please try again.")
